This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by dreamchess configure 0.2.0, which was
generated by GNU Autoconf 2.61.  Invocation command line was

  $ ./configure --prefix=/mingw CPPFLAGS=-I/mingw/include/SDL LIBS=-lpthread  -l ws2_32

## --------- ##
## Platform. ##
## --------- ##

hostname = WIN-KRVTGVPPFG5
uname -m = i686
uname -r = 1.0.16(0.48/3/2)
uname -s = MINGW32_NT-6.1
uname -v = 2010-09-29 00:07

/usr/bin/uname -p = unknown
/bin/uname -X     = unknown

/bin/arch              = unknown
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
/usr/bin/hostinfo      = unknown
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH: .
PATH: /usr/local/bin
PATH: /mingw/bin
PATH: /bin
PATH: /c/Windows/system32
PATH: /c/Windows
PATH: /c/Windows/System32/Wbem
PATH: /c/Windows/System32/WindowsPowerShell/v1.0/
PATH: /usr/bin


## ----------- ##
## Core tests. ##
## ----------- ##

configure:1814: checking build system type
configure:1832: result: i686-pc-mingw32
configure:1854: checking host system type
configure:1869: result: i686-pc-mingw32
configure:1891: checking target system type
configure:1906: result: i686-pc-mingw32
configure:1949: checking for a BSD-compatible install
configure:2005: result: /bin/install -c
configure:2016: checking whether build environment is sane
configure:2059: result: yes
configure:2087: checking for a thread-safe mkdir -p
configure:2126: result: /bin/mkdir -p
configure:2139: checking for gawk
configure:2155: found /bin/gawk
configure:2166: result: gawk
configure:2177: checking whether make sets $(MAKE)
configure:2198: result: yes
configure:2439: checking for gcc
configure:2455: found /mingw/bin/gcc
configure:2466: result: gcc
configure:2704: checking for C compiler version
configure:2711: gcc --version >&5
gcc.exe (GCC) 4.5.0
Copyright (C) 2010 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

configure:2714: $? = 0
configure:2721: gcc -v >&5
Using built-in specs.
COLLECT_GCC=C:\MinGW\bin\gcc.exe
COLLECT_LTO_WRAPPER=c:/mingw/bin/../libexec/gcc/mingw32/4.5.0/lto-wrapper.exe
Target: mingw32
Configured with: ../gcc-4.5.0/configure --enable-languages=c,c++,ada,fortran,objc,obj-c++ --disable-sjlj-exceptions --with-dwarf2 --enable-shared --enable-libgomp --disable-win32-registry --enable-libstdcxx-debug --enable-version-specific-runtime-libs --disable-werror --build=mingw32 --prefix=/mingw
Thread model: win32
gcc version 4.5.0 (GCC) 
configure:2724: $? = 0
configure:2731: gcc -V >&5
gcc.exe: '-V' option must have argument
configure:2734: $? = 1
configure:2757: checking for C compiler default output file name
configure:2784: gcc  -I/mingw/include/SDL  conftest.c -lpthread  -l ws2_32 >&5
configure:2787: $? = 0
configure:2825: result: a.exe
configure:2842: checking whether the C compiler works
configure:2852: ./a.exe
configure:2855: $? = 0
configure:2872: result: yes
configure:2879: checking whether we are cross compiling
configure:2881: result: no
configure:2884: checking for suffix of executables
configure:2891: gcc -o conftest.exe  -I/mingw/include/SDL  conftest.c -lpthread  -l ws2_32 >&5
configure:2894: $? = 0
configure:2918: result: .exe
configure:2924: checking for suffix of object files
configure:2950: gcc -c  -I/mingw/include/SDL conftest.c >&5
configure:2953: $? = 0
configure:2976: result: o
configure:2980: checking whether we are using the GNU C compiler
configure:3009: gcc -c  -I/mingw/include/SDL conftest.c >&5
configure:3015: $? = 0
configure:3032: result: yes
configure:3037: checking whether gcc accepts -g
configure:3067: gcc -c -g -I/mingw/include/SDL conftest.c >&5
configure:3073: $? = 0
configure:3172: result: yes
configure:3189: checking for gcc option to accept ISO C89
configure:3263: gcc  -c -g -O2 -I/mingw/include/SDL conftest.c >&5
configure:3269: $? = 0
configure:3292: result: none needed
configure:3321: checking for style of include used by make
configure:3349: result: GNU
configure:3374: checking dependency style of gcc
configure:3465: result: gcc3
configure:3523: checking for ranlib
configure:3539: found /mingw/bin/ranlib
configure:3550: result: ranlib
configure:3581: checking for flex
configure:3597: found /mingw/bin/flex
configure:3608: result: flex
configure:3645: flex conftest.l
configure:3648: $? = 0
configure:3650: checking lex output file root
configure:3666: result: lex.yy
configure:3671: checking lex library
configure:3690: gcc -o conftest.exe -g -O2 -I/mingw/include/SDL  conftest.c  -lpthread  -l ws2_32 >&5
conftest.l: In function 'yylex':
conftest.l:6:3: warning: comparison between pointer and integer
conftest.l:6:3: warning: assignment makes pointer from integer without a cast
C:\Users\i7\AppData\Local\Temp\ccuO4Os5.o: In function `input':
c:\Projekt\dreamchess-0.2.0/lex.yy.c:1086: undefined reference to `yywrap'
C:\Users\i7\AppData\Local\Temp\ccuO4Os5.o: In function `yylex':
c:\Projekt\dreamchess-0.2.0/lex.yy.c:743: undefined reference to `yywrap'
C:\Users\i7\AppData\Local\Temp\ccuO4Os5.o: In function `main':
c:\Projekt\dreamchess-0.2.0/conftest.l:16: undefined reference to `yywrap'
collect2: ld returned 1 exit status
configure:3696: $? = 1
configure: failed program was:
| /* A lexical scanner generated by flex */
| 
| /* Scanner skeleton version:
|  * $Header: /home/daffy/u0/vern/flex/RCS/flex.skl,v 2.91 96/09/10 16:58:48 vern Exp $
|  */
| 
| #define FLEX_SCANNER
| #define YY_FLEX_MAJOR_VERSION 2
| #define YY_FLEX_MINOR_VERSION 5
| 
| #include <stdio.h>
| 
| 
| /* cfront 1.2 defines "c_plusplus" instead of "__cplusplus" */
| #ifdef c_plusplus
| #ifndef __cplusplus
| #define __cplusplus
| #endif
| #endif
| 
| 
| #ifdef __cplusplus
| 
| #include <stdlib.h>
| #include <unistd.h>
| 
| /* Use prototypes in function declarations. */
| #define YY_USE_PROTOS
| 
| /* The "const" storage-class-modifier is valid. */
| #define YY_USE_CONST
| 
| #else	/* ! __cplusplus */
| 
| #if __STDC__
| 
| #define YY_USE_PROTOS
| #define YY_USE_CONST
| 
| #endif	/* __STDC__ */
| #endif	/* ! __cplusplus */
| 
| #ifdef __TURBOC__
|  #pragma warn -rch
|  #pragma warn -use
| #include <io.h>
| #include <stdlib.h>
| #define YY_USE_CONST
| #define YY_USE_PROTOS
| #endif
| 
| #ifdef YY_USE_CONST
| #define yyconst const
| #else
| #define yyconst
| #endif
| 
| 
| #ifdef YY_USE_PROTOS
| #define YY_PROTO(proto) proto
| #else
| #define YY_PROTO(proto) ()
| #endif
| 
| /* Returned upon end-of-file. */
| #define YY_NULL 0
| 
| /* Promotes a possibly negative, possibly signed char to an unsigned
|  * integer for use as an array index.  If the signed char is negative,
|  * we want to instead treat it as an 8-bit unsigned char, hence the
|  * double cast.
|  */
| #define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)
| 
| /* Enter a start condition.  This macro really ought to take a parameter,
|  * but we do it the disgusting crufty way forced on us by the ()-less
|  * definition of BEGIN.
|  */
| #define BEGIN yy_start = 1 + 2 *
| 
| /* Translate the current start state into a value that can be later handed
|  * to BEGIN to return to the state.  The YYSTATE alias is for lex
|  * compatibility.
|  */
| #define YY_START ((yy_start - 1) / 2)
| #define YYSTATE YY_START
| 
| /* Action number for EOF rule of a given start state. */
| #define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)
| 
| /* Special action meaning "start processing a new file". */
| #define YY_NEW_FILE yyrestart( yyin )
| 
| #define YY_END_OF_BUFFER_CHAR 0
| 
| /* Size of default input buffer. */
| #define YY_BUF_SIZE 16384
| 
| typedef struct yy_buffer_state *YY_BUFFER_STATE;
| 
| extern int yyleng;
| extern FILE *yyin, *yyout;
| 
| #define EOB_ACT_CONTINUE_SCAN 0
| #define EOB_ACT_END_OF_FILE 1
| #define EOB_ACT_LAST_MATCH 2
| 
| /* The funky do-while in the following #define is used to turn the definition
|  * int a single C statement (which needs a semi-colon terminator).  This
|  * avoids problems with code like:
|  *
|  * 	if ( condition_holds )
|  *		yyless( 5 );
|  *	else
|  *		do_something_else();
|  *
|  * Prior to using the do-while the compiler would get upset at the
|  * "else" because it interpreted the "if" statement as being all
|  * done when it reached the ';' after the yyless() call.
|  */
| 
| /* Return all but the first 'n' matched characters back to the input stream. */
| 
| #define yyless(n) \
| 	do \
| 		{ \
| 		/* Undo effects of setting up yytext. */ \
| 		*yy_cp = yy_hold_char; \
| 		YY_RESTORE_YY_MORE_OFFSET \
| 		yy_c_buf_p = yy_cp = yy_bp + n - YY_MORE_ADJ; \
| 		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
| 		} \
| 	while ( 0 )
| 
| #define unput(c) yyunput( c, yytext_ptr )
| 
| /* The following is because we cannot portably get our hands on size_t
|  * (without autoconf's help, which isn't available because we want
|  * flex-generated scanners to compile on their own).
|  */
| typedef unsigned int yy_size_t;
| 
| 
| struct yy_buffer_state
| 	{
| 	FILE *yy_input_file;
| 
| 	char *yy_ch_buf;		/* input buffer */
| 	char *yy_buf_pos;		/* current position in input buffer */
| 
| 	/* Size of input buffer in bytes, not including room for EOB
| 	 * characters.
| 	 */
| 	yy_size_t yy_buf_size;
| 
| 	/* Number of characters read into yy_ch_buf, not including EOB
| 	 * characters.
| 	 */
| 	int yy_n_chars;
| 
| 	/* Whether we "own" the buffer - i.e., we know we created it,
| 	 * and can realloc() it to grow it, and should free() it to
| 	 * delete it.
| 	 */
| 	int yy_is_our_buffer;
| 
| 	/* Whether this is an "interactive" input source; if so, and
| 	 * if we're using stdio for input, then we want to use getc()
| 	 * instead of fread(), to make sure we stop fetching input after
| 	 * each newline.
| 	 */
| 	int yy_is_interactive;
| 
| 	/* Whether we're considered to be at the beginning of a line.
| 	 * If so, '^' rules will be active on the next match, otherwise
| 	 * not.
| 	 */
| 	int yy_at_bol;
| 
| 	/* Whether to try to fill the input buffer when we reach the
| 	 * end of it.
| 	 */
| 	int yy_fill_buffer;
| 
| 	int yy_buffer_status;
| #define YY_BUFFER_NEW 0
| #define YY_BUFFER_NORMAL 1
| 	/* When an EOF's been seen but there's still some text to process
| 	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
| 	 * shouldn't try reading from the input source any more.  We might
| 	 * still have a bunch of tokens to match, though, because of
| 	 * possible backing-up.
| 	 *
| 	 * When we actually see the EOF, we change the status to "new"
| 	 * (via yyrestart()), so that the user can continue scanning by
| 	 * just pointing yyin at a new input file.
| 	 */
| #define YY_BUFFER_EOF_PENDING 2
| 	};
| 
| static YY_BUFFER_STATE yy_current_buffer = 0;
| 
| /* We provide macros for accessing buffer states in case in the
|  * future we want to put the buffer states in a more general
|  * "scanner state".
|  */
| #define YY_CURRENT_BUFFER yy_current_buffer
| 
| 
| /* yy_hold_char holds the character lost when yytext is formed. */
| static char yy_hold_char;
| 
| static int yy_n_chars;		/* number of characters read into yy_ch_buf */
| 
| 
| int yyleng;
| 
| /* Points to current character in buffer. */
| static char *yy_c_buf_p = (char *) 0;
| static int yy_init = 1;		/* whether we need to initialize */
| static int yy_start = 0;	/* start state number */
| 
| /* Flag which is used to allow yywrap()'s to do buffer switches
|  * instead of setting up a fresh yyin.  A bit of a hack ...
|  */
| static int yy_did_buffer_switch_on_eof;
| 
| void yyrestart YY_PROTO(( FILE *input_file ));
| 
| void yy_switch_to_buffer YY_PROTO(( YY_BUFFER_STATE new_buffer ));
| void yy_load_buffer_state YY_PROTO(( void ));
| YY_BUFFER_STATE yy_create_buffer YY_PROTO(( FILE *file, int size ));
| void yy_delete_buffer YY_PROTO(( YY_BUFFER_STATE b ));
| void yy_init_buffer YY_PROTO(( YY_BUFFER_STATE b, FILE *file ));
| void yy_flush_buffer YY_PROTO(( YY_BUFFER_STATE b ));
| #define YY_FLUSH_BUFFER yy_flush_buffer( yy_current_buffer )
| 
| YY_BUFFER_STATE yy_scan_buffer YY_PROTO(( char *base, yy_size_t size ));
| YY_BUFFER_STATE yy_scan_string YY_PROTO(( yyconst char *yy_str ));
| YY_BUFFER_STATE yy_scan_bytes YY_PROTO(( yyconst char *bytes, int len ));
| 
| static void *yy_flex_alloc YY_PROTO(( yy_size_t ));
| static void *yy_flex_realloc YY_PROTO(( void *, yy_size_t ));
| static void yy_flex_free YY_PROTO(( void * ));
| 
| #define yy_new_buffer yy_create_buffer
| 
| #define yy_set_interactive(is_interactive) \
| 	{ \
| 	if ( ! yy_current_buffer ) \
| 		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE ); \
| 	yy_current_buffer->yy_is_interactive = is_interactive; \
| 	}
| 
| #define yy_set_bol(at_bol) \
| 	{ \
| 	if ( ! yy_current_buffer ) \
| 		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE ); \
| 	yy_current_buffer->yy_at_bol = at_bol; \
| 	}
| 
| #define YY_AT_BOL() (yy_current_buffer->yy_at_bol)
| 
| 
| #define YY_USES_REJECT
| typedef unsigned char YY_CHAR;
| FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;
| typedef int yy_state_type;
| extern char *yytext;
| #define yytext_ptr yytext
| 
| static yy_state_type yy_get_previous_state YY_PROTO(( void ));
| static yy_state_type yy_try_NUL_trans YY_PROTO(( yy_state_type current_state ));
| static int yy_get_next_buffer YY_PROTO(( void ));
| static void yy_fatal_error YY_PROTO(( yyconst char msg[] ));
| 
| /* Done after the current pattern has been matched and before the
|  * corresponding action - sets up yytext.
|  */
| #define YY_DO_BEFORE_ACTION \
| 	yytext_ptr = yy_bp; \
| 	yytext_ptr -= yy_more_len; \
| 	yyleng = (int) (yy_cp - yytext_ptr); \
| 	yy_hold_char = *yy_cp; \
| 	*yy_cp = '\0'; \
| 	yy_c_buf_p = yy_cp;
| 
| #define YY_NUM_RULES 8
| #define YY_END_OF_BUFFER 9
| static yyconst short int yy_acclist[23] =
|     {   0,
|         9,    7,    8,    8,    1,    7,    8,    2,    7,    8,
|         3,    7,    8,    4,    7,    8,    5,    7,    8,    6,
|         7,    8
|     } ;
| 
| static yyconst short int yy_accept[14] =
|     {   0,
|         1,    1,    1,    2,    4,    5,    8,   11,   14,   17,
|        20,   23,   23
|     } ;
| 
| static yyconst int yy_ec[256] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    2,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    3,    4,    5,    6,
| 
|         7,    8,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
| 
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1
|     } ;
| 
| static yyconst int yy_meta[9] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1
|     } ;
| 
| static yyconst short int yy_base[13] =
|     {   0,
|         0,    0,    9,   10,   10,   10,   10,   10,   10,   10,
|        10,   10
|     } ;
| 
| static yyconst short int yy_def[13] =
|     {   0,
|        12,    1,   12,   12,   12,   12,   12,   12,   12,   12,
|        12,    0
|     } ;
| 
| static yyconst short int yy_nxt[19] =
|     {   0,
|         4,    5,    6,    7,    8,    9,   10,   11,   12,    3,
|        12,   12,   12,   12,   12,   12,   12,   12
|     } ;
| 
| static yyconst short int yy_chk[19] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1,    3,   12,
|        12,   12,   12,   12,   12,   12,   12,   12
|     } ;
| 
| static yy_state_type yy_state_buf[YY_BUF_SIZE + 2], *yy_state_ptr;
| static char *yy_full_match;
| static int yy_lp;
| #define REJECT \
| { \
| *yy_cp = yy_hold_char; /* undo effects of setting up yytext */ \
| yy_cp = yy_full_match; /* restore poss. backed-over text */ \
| ++yy_lp; \
| goto find_rule; \
| }
| static int yy_more_flag = 0;
| static int yy_more_len = 0;
| #define yymore() (yy_more_flag = 1)
| #define YY_MORE_ADJ yy_more_len
| #define YY_RESTORE_YY_MORE_OFFSET
| char *yytext;
| #line 1 "conftest.l"
| #define INITIAL 0
| #line 383 "lex.yy.c"
| 
| /* Macros after this point can all be overridden by user definitions in
|  * section 1.
|  */
| 
| #ifndef YY_SKIP_YYWRAP
| #ifdef __cplusplus
| extern "C" int yywrap YY_PROTO(( void ));
| #else
| extern int yywrap YY_PROTO(( void ));
| #endif
| #endif
| 
| #ifndef YY_NO_UNPUT
| static void yyunput YY_PROTO(( int c, char *buf_ptr ));
| #endif
| 
| #ifndef yytext_ptr
| static void yy_flex_strncpy YY_PROTO(( char *, yyconst char *, int ));
| #endif
| 
| #ifdef YY_NEED_STRLEN
| static int yy_flex_strlen YY_PROTO(( yyconst char * ));
| #endif
| 
| #ifndef YY_NO_INPUT
| #ifdef __cplusplus
| static int yyinput YY_PROTO(( void ));
| #else
| static int input YY_PROTO(( void ));
| #endif
| #endif
| 
| #if YY_STACK_USED
| static int yy_start_stack_ptr = 0;
| static int yy_start_stack_depth = 0;
| static int *yy_start_stack = 0;
| #ifndef YY_NO_PUSH_STATE
| static void yy_push_state YY_PROTO(( int new_state ));
| #endif
| #ifndef YY_NO_POP_STATE
| static void yy_pop_state YY_PROTO(( void ));
| #endif
| #ifndef YY_NO_TOP_STATE
| static int yy_top_state YY_PROTO(( void ));
| #endif
| 
| #else
| #define YY_NO_PUSH_STATE 1
| #define YY_NO_POP_STATE 1
| #define YY_NO_TOP_STATE 1
| #endif
| 
| #ifdef YY_MALLOC_DECL
| YY_MALLOC_DECL
| #else
| #if __STDC__
| #ifndef __cplusplus
| #include <stdlib.h>
| #endif
| #else
| /* Just try to get by without declaring the routines.  This will fail
|  * miserably on non-ANSI systems for which sizeof(size_t) != sizeof(int)
|  * or sizeof(void*) != sizeof(int).
|  */
| #endif
| #endif
| 
| /* Amount of stuff to slurp up with each read. */
| #ifndef YY_READ_BUF_SIZE
| #define YY_READ_BUF_SIZE 8192
| #endif
| 
| /* Copy whatever the last rule matched to the standard output. */
| 
| #ifndef ECHO
| /* This used to be an fputs(), but since the string might contain NUL's,
|  * we now use fwrite().
|  */
| #define ECHO (void) fwrite( yytext, yyleng, 1, yyout )
| #endif
| 
| /* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
|  * is returned in "result".
|  */
| #ifndef YY_INPUT
| #define YY_INPUT(buf,result,max_size) \
| 	if ( yy_current_buffer->yy_is_interactive ) \
| 		{ \
| 		int c = '*', n; \
| 		for ( n = 0; n < max_size && \
| 			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
| 			buf[n] = (char) c; \
| 		if ( c == '\n' ) \
| 			buf[n++] = (char) c; \
| 		if ( c == EOF && ferror( yyin ) ) \
| 			YY_FATAL_ERROR( "input in flex scanner failed" ); \
| 		result = n; \
| 		} \
| 	else if ( ((result = fread( buf, 1, max_size, yyin )) == 0) \
| 		  && ferror( yyin ) ) \
| 		YY_FATAL_ERROR( "input in flex scanner failed" );
| #endif
| 
| /* No semi-colon after return; correct usage is to write "yyterminate();" -
|  * we don't want an extra ';' after the "return" because that will cause
|  * some compilers to complain about unreachable statements.
|  */
| #ifndef yyterminate
| #define yyterminate() return YY_NULL
| #endif
| 
| /* Number of entries by which start-condition stack grows. */
| #ifndef YY_START_STACK_INCR
| #define YY_START_STACK_INCR 25
| #endif
| 
| /* Report a fatal error. */
| #ifndef YY_FATAL_ERROR
| #define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
| #endif
| 
| /* Default declaration of generated scanner - a define so the user can
|  * easily add parameters.
|  */
| #ifndef YY_DECL
| #define YY_DECL int yylex YY_PROTO(( void ))
| #endif
| 
| /* Code executed at the beginning of each rule, after yytext and yyleng
|  * have been set up.
|  */
| #ifndef YY_USER_ACTION
| #define YY_USER_ACTION
| #endif
| 
| /* Code executed at the end of each rule. */
| #ifndef YY_BREAK
| #define YY_BREAK break;
| #endif
| 
| #define YY_RULE_SETUP \
| 	YY_USER_ACTION
| 
| YY_DECL
| 	{
| 	register yy_state_type yy_current_state;
| 	register char *yy_cp, *yy_bp;
| 	register int yy_act;
| 
| #line 1 "conftest.l"
| 
| #line 536 "lex.yy.c"
| 
| 	if ( yy_init )
| 		{
| 		yy_init = 0;
| 
| #ifdef YY_USER_INIT
| 		YY_USER_INIT;
| #endif
| 
| 		if ( ! yy_start )
| 			yy_start = 1;	/* first start state */
| 
| 		if ( ! yyin )
| 			yyin = stdin;
| 
| 		if ( ! yyout )
| 			yyout = stdout;
| 
| 		if ( ! yy_current_buffer )
| 			yy_current_buffer =
| 				yy_create_buffer( yyin, YY_BUF_SIZE );
| 
| 		yy_load_buffer_state();
| 		}
| 
| 	while ( 1 )		/* loops until end-of-file is reached */
| 		{
| 		yy_more_len = 0;
| 		if ( yy_more_flag )
| 			{
| 			yy_more_len = yy_c_buf_p - yytext_ptr;
| 			yy_more_flag = 0;
| 			}
| 		yy_cp = yy_c_buf_p;
| 
| 		/* Support of yytext. */
| 		*yy_cp = yy_hold_char;
| 
| 		/* yy_bp points to the position in yy_ch_buf of the start of
| 		 * the current run.
| 		 */
| 		yy_bp = yy_cp;
| 
| 		yy_current_state = yy_start;
| 		yy_state_ptr = yy_state_buf;
| 		*yy_state_ptr++ = yy_current_state;
| yy_match:
| 		do
| 			{
| 			register YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)];
| 			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 				{
| 				yy_current_state = (int) yy_def[yy_current_state];
| 				if ( yy_current_state >= 13 )
| 					yy_c = yy_meta[(unsigned int) yy_c];
| 				}
| 			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
| 			*yy_state_ptr++ = yy_current_state;
| 			++yy_cp;
| 			}
| 		while ( yy_base[yy_current_state] != 10 );
| 
| yy_find_action:
| 		yy_current_state = *--yy_state_ptr;
| 		yy_lp = yy_accept[yy_current_state];
| find_rule: /* we branch to this label when backing up */
| 		for ( ; ; ) /* until we find what rule we matched */
| 			{
| 			if ( yy_lp && yy_lp < yy_accept[yy_current_state + 1] )
| 				{
| 				yy_act = yy_acclist[yy_lp];
| 					{
| 					yy_full_match = yy_cp;
| 					break;
| 					}
| 				}
| 			--yy_cp;
| 			yy_current_state = *--yy_state_ptr;
| 			yy_lp = yy_accept[yy_current_state];
| 			}
| 
| 		YY_DO_BEFORE_ACTION;
| 
| 
| do_action:	/* This label is used only to access EOF actions. */
| 
| 
| 		switch ( yy_act )
| 	{ /* beginning of action switch */
| case 1:
| YY_RULE_SETUP
| #line 2 "conftest.l"
| { ECHO; }
| 	YY_BREAK
| case 2:
| YY_RULE_SETUP
| #line 3 "conftest.l"
| { REJECT; }
| 	YY_BREAK
| case 3:
| YY_RULE_SETUP
| #line 4 "conftest.l"
| { yymore (); }
| 	YY_BREAK
| case 4:
| YY_RULE_SETUP
| #line 5 "conftest.l"
| { yyless (1); }
| 	YY_BREAK
| case 5:
| YY_RULE_SETUP
| #line 6 "conftest.l"
| { yyless (input () != 0); }
| 	YY_BREAK
| case 6:
| YY_RULE_SETUP
| #line 7 "conftest.l"
| { unput (yytext[0]); }
| 	YY_BREAK
| case 7:
| YY_RULE_SETUP
| #line 8 "conftest.l"
| { BEGIN INITIAL; }
| 	YY_BREAK
| case 8:
| YY_RULE_SETUP
| #line 9 "conftest.l"
| ECHO;
| 	YY_BREAK
| #line 666 "lex.yy.c"
| 			case YY_STATE_EOF(INITIAL):
| 				yyterminate();
| 
| 	case YY_END_OF_BUFFER:
| 		{
| 		/* Amount of text matched not including the EOB char. */
| 		int yy_amount_of_matched_text = (int) (yy_cp - yytext_ptr) - 1;
| 
| 		/* Undo the effects of YY_DO_BEFORE_ACTION. */
| 		*yy_cp = yy_hold_char;
| 		YY_RESTORE_YY_MORE_OFFSET
| 
| 		if ( yy_current_buffer->yy_buffer_status == YY_BUFFER_NEW )
| 			{
| 			/* We're scanning a new file or input source.  It's
| 			 * possible that this happened because the user
| 			 * just pointed yyin at a new source and called
| 			 * yylex().  If so, then we have to assure
| 			 * consistency between yy_current_buffer and our
| 			 * globals.  Here is the right place to do so, because
| 			 * this is the first action (other than possibly a
| 			 * back-up) that will match for the new input source.
| 			 */
| 			yy_n_chars = yy_current_buffer->yy_n_chars;
| 			yy_current_buffer->yy_input_file = yyin;
| 			yy_current_buffer->yy_buffer_status = YY_BUFFER_NORMAL;
| 			}
| 
| 		/* Note that here we test for yy_c_buf_p "<=" to the position
| 		 * of the first EOB in the buffer, since yy_c_buf_p will
| 		 * already have been incremented past the NUL character
| 		 * (since all states make transitions on EOB to the
| 		 * end-of-buffer state).  Contrast this with the test
| 		 * in input().
| 		 */
| 		if ( yy_c_buf_p <= &yy_current_buffer->yy_ch_buf[yy_n_chars] )
| 			{ /* This was really a NUL. */
| 			yy_state_type yy_next_state;
| 
| 			yy_c_buf_p = yytext_ptr + yy_amount_of_matched_text;
| 
| 			yy_current_state = yy_get_previous_state();
| 
| 			/* Okay, we're now positioned to make the NUL
| 			 * transition.  We couldn't have
| 			 * yy_get_previous_state() go ahead and do it
| 			 * for us because it doesn't know how to deal
| 			 * with the possibility of jamming (and we don't
| 			 * want to build jamming into it because then it
| 			 * will run more slowly).
| 			 */
| 
| 			yy_next_state = yy_try_NUL_trans( yy_current_state );
| 
| 			yy_bp = yytext_ptr + YY_MORE_ADJ;
| 
| 			if ( yy_next_state )
| 				{
| 				/* Consume the NUL. */
| 				yy_cp = ++yy_c_buf_p;
| 				yy_current_state = yy_next_state;
| 				goto yy_match;
| 				}
| 
| 			else
| 				{
| 				yy_cp = yy_c_buf_p;
| 				goto yy_find_action;
| 				}
| 			}
| 
| 		else switch ( yy_get_next_buffer() )
| 			{
| 			case EOB_ACT_END_OF_FILE:
| 				{
| 				yy_did_buffer_switch_on_eof = 0;
| 
| 				if ( yywrap() )
| 					{
| 					/* Note: because we've taken care in
| 					 * yy_get_next_buffer() to have set up
| 					 * yytext, we can now set up
| 					 * yy_c_buf_p so that if some total
| 					 * hoser (like flex itself) wants to
| 					 * call the scanner after we return the
| 					 * YY_NULL, it'll still work - another
| 					 * YY_NULL will get returned.
| 					 */
| 					yy_c_buf_p = yytext_ptr + YY_MORE_ADJ;
| 
| 					yy_act = YY_STATE_EOF(YY_START);
| 					goto do_action;
| 					}
| 
| 				else
| 					{
| 					if ( ! yy_did_buffer_switch_on_eof )
| 						YY_NEW_FILE;
| 					}
| 				break;
| 				}
| 
| 			case EOB_ACT_CONTINUE_SCAN:
| 				yy_c_buf_p =
| 					yytext_ptr + yy_amount_of_matched_text;
| 
| 				yy_current_state = yy_get_previous_state();
| 
| 				yy_cp = yy_c_buf_p;
| 				yy_bp = yytext_ptr + YY_MORE_ADJ;
| 				goto yy_match;
| 
| 			case EOB_ACT_LAST_MATCH:
| 				yy_c_buf_p =
| 				&yy_current_buffer->yy_ch_buf[yy_n_chars];
| 
| 				yy_current_state = yy_get_previous_state();
| 
| 				yy_cp = yy_c_buf_p;
| 				yy_bp = yytext_ptr + YY_MORE_ADJ;
| 				goto yy_find_action;
| 			}
| 		break;
| 		}
| 
| 	default:
| 		YY_FATAL_ERROR(
| 			"fatal flex scanner internal error--no action found" );
| 	} /* end of action switch */
| 		} /* end of scanning one token */
| 	} /* end of yylex */
| 
| 
| /* yy_get_next_buffer - try to read in a new buffer
|  *
|  * Returns a code representing an action:
|  *	EOB_ACT_LAST_MATCH -
|  *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
|  *	EOB_ACT_END_OF_FILE - end of file
|  */
| 
| static int yy_get_next_buffer()
| 	{
| 	register char *dest = yy_current_buffer->yy_ch_buf;
| 	register char *source = yytext_ptr;
| 	register int number_to_move, i;
| 	int ret_val;
| 
| 	if ( yy_c_buf_p > &yy_current_buffer->yy_ch_buf[yy_n_chars + 1] )
| 		YY_FATAL_ERROR(
| 		"fatal flex scanner internal error--end of buffer missed" );
| 
| 	if ( yy_current_buffer->yy_fill_buffer == 0 )
| 		{ /* Don't try to fill the buffer, so this is an EOF. */
| 		if ( yy_c_buf_p - yytext_ptr - YY_MORE_ADJ == 1 )
| 			{
| 			/* We matched a single character, the EOB, so
| 			 * treat this as a final EOF.
| 			 */
| 			return EOB_ACT_END_OF_FILE;
| 			}
| 
| 		else
| 			{
| 			/* We matched some text prior to the EOB, first
| 			 * process it.
| 			 */
| 			return EOB_ACT_LAST_MATCH;
| 			}
| 		}
| 
| 	/* Try to read more data. */
| 
| 	/* First move last chars to start of buffer. */
| 	number_to_move = (int) (yy_c_buf_p - yytext_ptr) - 1;
| 
| 	for ( i = 0; i < number_to_move; ++i )
| 		*(dest++) = *(source++);
| 
| 	if ( yy_current_buffer->yy_buffer_status == YY_BUFFER_EOF_PENDING )
| 		/* don't do the read, it's not guaranteed to return an EOF,
| 		 * just force an EOF
| 		 */
| 		yy_current_buffer->yy_n_chars = yy_n_chars = 0;
| 
| 	else
| 		{
| 		int num_to_read =
| 			yy_current_buffer->yy_buf_size - number_to_move - 1;
| 
| 		while ( num_to_read <= 0 )
| 			{ /* Not enough room in the buffer - grow it. */
| #ifdef YY_USES_REJECT
| 			YY_FATAL_ERROR(
| "input buffer overflow, can't enlarge buffer because scanner uses REJECT" );
| #else
| 
| 			/* just a shorter name for the current buffer */
| 			YY_BUFFER_STATE b = yy_current_buffer;
| 
| 			int yy_c_buf_p_offset =
| 				(int) (yy_c_buf_p - b->yy_ch_buf);
| 
| 			if ( b->yy_is_our_buffer )
| 				{
| 				int new_size = b->yy_buf_size * 2;
| 
| 				if ( new_size <= 0 )
| 					b->yy_buf_size += b->yy_buf_size / 8;
| 				else
| 					b->yy_buf_size *= 2;
| 
| 				b->yy_ch_buf = (char *)
| 					/* Include room in for 2 EOB chars. */
| 					yy_flex_realloc( (void *) b->yy_ch_buf,
| 							 b->yy_buf_size + 2 );
| 				}
| 			else
| 				/* Can't grow it, we don't own it. */
| 				b->yy_ch_buf = 0;
| 
| 			if ( ! b->yy_ch_buf )
| 				YY_FATAL_ERROR(
| 				"fatal error - scanner input buffer overflow" );
| 
| 			yy_c_buf_p = &b->yy_ch_buf[yy_c_buf_p_offset];
| 
| 			num_to_read = yy_current_buffer->yy_buf_size -
| 						number_to_move - 1;
| #endif
| 			}
| 
| 		if ( num_to_read > YY_READ_BUF_SIZE )
| 			num_to_read = YY_READ_BUF_SIZE;
| 
| 		/* Read in more data. */
| 		YY_INPUT( (&yy_current_buffer->yy_ch_buf[number_to_move]),
| 			yy_n_chars, num_to_read );
| 
| 		yy_current_buffer->yy_n_chars = yy_n_chars;
| 		}
| 
| 	if ( yy_n_chars == 0 )
| 		{
| 		if ( number_to_move == YY_MORE_ADJ )
| 			{
| 			ret_val = EOB_ACT_END_OF_FILE;
| 			yyrestart( yyin );
| 			}
| 
| 		else
| 			{
| 			ret_val = EOB_ACT_LAST_MATCH;
| 			yy_current_buffer->yy_buffer_status =
| 				YY_BUFFER_EOF_PENDING;
| 			}
| 		}
| 
| 	else
| 		ret_val = EOB_ACT_CONTINUE_SCAN;
| 
| 	yy_n_chars += number_to_move;
| 	yy_current_buffer->yy_ch_buf[yy_n_chars] = YY_END_OF_BUFFER_CHAR;
| 	yy_current_buffer->yy_ch_buf[yy_n_chars + 1] = YY_END_OF_BUFFER_CHAR;
| 
| 	yytext_ptr = &yy_current_buffer->yy_ch_buf[0];
| 
| 	return ret_val;
| 	}
| 
| 
| /* yy_get_previous_state - get the state just before the EOB char was reached */
| 
| static yy_state_type yy_get_previous_state()
| 	{
| 	register yy_state_type yy_current_state;
| 	register char *yy_cp;
| 
| 	yy_current_state = yy_start;
| 	yy_state_ptr = yy_state_buf;
| 	*yy_state_ptr++ = yy_current_state;
| 
| 	for ( yy_cp = yytext_ptr + YY_MORE_ADJ; yy_cp < yy_c_buf_p; ++yy_cp )
| 		{
| 		register YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
| 		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 			{
| 			yy_current_state = (int) yy_def[yy_current_state];
| 			if ( yy_current_state >= 13 )
| 				yy_c = yy_meta[(unsigned int) yy_c];
| 			}
| 		yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
| 		*yy_state_ptr++ = yy_current_state;
| 		}
| 
| 	return yy_current_state;
| 	}
| 
| 
| /* yy_try_NUL_trans - try to make a transition on the NUL character
|  *
|  * synopsis
|  *	next_state = yy_try_NUL_trans( current_state );
|  */
| 
| #ifdef YY_USE_PROTOS
| static yy_state_type yy_try_NUL_trans( yy_state_type yy_current_state )
| #else
| static yy_state_type yy_try_NUL_trans( yy_current_state )
| yy_state_type yy_current_state;
| #endif
| 	{
| 	register int yy_is_jam;
| 
| 	register YY_CHAR yy_c = 1;
| 	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 		{
| 		yy_current_state = (int) yy_def[yy_current_state];
| 		if ( yy_current_state >= 13 )
| 			yy_c = yy_meta[(unsigned int) yy_c];
| 		}
| 	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
| 	yy_is_jam = (yy_current_state == 12);
| 	if ( ! yy_is_jam )
| 		*yy_state_ptr++ = yy_current_state;
| 
| 	return yy_is_jam ? 0 : yy_current_state;
| 	}
| 
| 
| #ifndef YY_NO_UNPUT
| #ifdef YY_USE_PROTOS
| static void yyunput( int c, register char *yy_bp )
| #else
| static void yyunput( c, yy_bp )
| int c;
| register char *yy_bp;
| #endif
| 	{
| 	register char *yy_cp = yy_c_buf_p;
| 
| 	/* undo effects of setting up yytext */
| 	*yy_cp = yy_hold_char;
| 
| 	if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
| 		{ /* need to shift things up to make room */
| 		/* +2 for EOB chars. */
| 		register int number_to_move = yy_n_chars + 2;
| 		register char *dest = &yy_current_buffer->yy_ch_buf[
| 					yy_current_buffer->yy_buf_size + 2];
| 		register char *source =
| 				&yy_current_buffer->yy_ch_buf[number_to_move];
| 
| 		while ( source > yy_current_buffer->yy_ch_buf )
| 			*--dest = *--source;
| 
| 		yy_cp += (int) (dest - source);
| 		yy_bp += (int) (dest - source);
| 		yy_current_buffer->yy_n_chars =
| 			yy_n_chars = yy_current_buffer->yy_buf_size;
| 
| 		if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
| 			YY_FATAL_ERROR( "flex scanner push-back overflow" );
| 		}
| 
| 	*--yy_cp = (char) c;
| 
| 
| 	yytext_ptr = yy_bp;
| 	yy_hold_char = *yy_cp;
| 	yy_c_buf_p = yy_cp;
| 	}
| #endif	/* ifndef YY_NO_UNPUT */
| 
| 
| #ifdef __cplusplus
| static int yyinput()
| #else
| static int input()
| #endif
| 	{
| 	int c;
| 
| 	*yy_c_buf_p = yy_hold_char;
| 
| 	if ( *yy_c_buf_p == YY_END_OF_BUFFER_CHAR )
| 		{
| 		/* yy_c_buf_p now points to the character we want to return.
| 		 * If this occurs *before* the EOB characters, then it's a
| 		 * valid NUL; if not, then we've hit the end of the buffer.
| 		 */
| 		if ( yy_c_buf_p < &yy_current_buffer->yy_ch_buf[yy_n_chars] )
| 			/* This was really a NUL. */
| 			*yy_c_buf_p = '\0';
| 
| 		else
| 			{ /* need more input */
| 			int offset = yy_c_buf_p - yytext_ptr;
| 			++yy_c_buf_p;
| 
| 			switch ( yy_get_next_buffer() )
| 				{
| 				case EOB_ACT_LAST_MATCH:
| 					/* This happens because yy_g_n_b()
| 					 * sees that we've accumulated a
| 					 * token and flags that we need to
| 					 * try matching the token before
| 					 * proceeding.  But for input(),
| 					 * there's no matching to consider.
| 					 * So convert the EOB_ACT_LAST_MATCH
| 					 * to EOB_ACT_END_OF_FILE.
| 					 */
| 
| 					/* Reset buffer status. */
| 					yyrestart( yyin );
| 
| 					/* fall through */
| 
| 				case EOB_ACT_END_OF_FILE:
| 					{
| 					if ( yywrap() )
| 						return EOF;
| 
| 					if ( ! yy_did_buffer_switch_on_eof )
| 						YY_NEW_FILE;
| #ifdef __cplusplus
| 					return yyinput();
| #else
| 					return input();
| #endif
| 					}
| 
| 				case EOB_ACT_CONTINUE_SCAN:
| 					yy_c_buf_p = yytext_ptr + offset;
| 					break;
| 				}
| 			}
| 		}
| 
| 	c = *(unsigned char *) yy_c_buf_p;	/* cast for 8-bit char's */
| 	*yy_c_buf_p = '\0';	/* preserve yytext */
| 	yy_hold_char = *++yy_c_buf_p;
| 
| 
| 	return c;
| 	}
| 
| 
| #ifdef YY_USE_PROTOS
| void yyrestart( FILE *input_file )
| #else
| void yyrestart( input_file )
| FILE *input_file;
| #endif
| 	{
| 	if ( ! yy_current_buffer )
| 		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE );
| 
| 	yy_init_buffer( yy_current_buffer, input_file );
| 	yy_load_buffer_state();
| 	}
| 
| 
| #ifdef YY_USE_PROTOS
| void yy_switch_to_buffer( YY_BUFFER_STATE new_buffer )
| #else
| void yy_switch_to_buffer( new_buffer )
| YY_BUFFER_STATE new_buffer;
| #endif
| 	{
| 	if ( yy_current_buffer == new_buffer )
| 		return;
| 
| 	if ( yy_current_buffer )
| 		{
| 		/* Flush out information for old buffer. */
| 		*yy_c_buf_p = yy_hold_char;
| 		yy_current_buffer->yy_buf_pos = yy_c_buf_p;
| 		yy_current_buffer->yy_n_chars = yy_n_chars;
| 		}
| 
| 	yy_current_buffer = new_buffer;
| 	yy_load_buffer_state();
| 
| 	/* We don't actually know whether we did this switch during
| 	 * EOF (yywrap()) processing, but the only time this flag
| 	 * is looked at is after yywrap() is called, so it's safe
| 	 * to go ahead and always set it.
| 	 */
| 	yy_did_buffer_switch_on_eof = 1;
| 	}
| 
| 
| #ifdef YY_USE_PROTOS
| void yy_load_buffer_state( void )
| #else
| void yy_load_buffer_state()
| #endif
| 	{
| 	yy_n_chars = yy_current_buffer->yy_n_chars;
| 	yytext_ptr = yy_c_buf_p = yy_current_buffer->yy_buf_pos;
| 	yyin = yy_current_buffer->yy_input_file;
| 	yy_hold_char = *yy_c_buf_p;
| 	}
| 
| 
| #ifdef YY_USE_PROTOS
| YY_BUFFER_STATE yy_create_buffer( FILE *file, int size )
| #else
| YY_BUFFER_STATE yy_create_buffer( file, size )
| FILE *file;
| int size;
| #endif
| 	{
| 	YY_BUFFER_STATE b;
| 
| 	b = (YY_BUFFER_STATE) yy_flex_alloc( sizeof( struct yy_buffer_state ) );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
| 
| 	b->yy_buf_size = size;
| 
| 	/* yy_ch_buf has to be 2 characters longer than the size given because
| 	 * we need to put in 2 end-of-buffer characters.
| 	 */
| 	b->yy_ch_buf = (char *) yy_flex_alloc( b->yy_buf_size + 2 );
| 	if ( ! b->yy_ch_buf )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
| 
| 	b->yy_is_our_buffer = 1;
| 
| 	yy_init_buffer( b, file );
| 
| 	return b;
| 	}
| 
| 
| #ifdef YY_USE_PROTOS
| void yy_delete_buffer( YY_BUFFER_STATE b )
| #else
| void yy_delete_buffer( b )
| YY_BUFFER_STATE b;
| #endif
| 	{
| 	if ( ! b )
| 		return;
| 
| 	if ( b == yy_current_buffer )
| 		yy_current_buffer = (YY_BUFFER_STATE) 0;
| 
| 	if ( b->yy_is_our_buffer )
| 		yy_flex_free( (void *) b->yy_ch_buf );
| 
| 	yy_flex_free( (void *) b );
| 	}
| 
| 
| #ifndef YY_ALWAYS_INTERACTIVE
| #ifndef YY_NEVER_INTERACTIVE
| extern int isatty YY_PROTO(( int ));
| #endif
| #endif
| 
| #ifdef YY_USE_PROTOS
| void yy_init_buffer( YY_BUFFER_STATE b, FILE *file )
| #else
| void yy_init_buffer( b, file )
| YY_BUFFER_STATE b;
| FILE *file;
| #endif
| 
| 
| 	{
| 	yy_flush_buffer( b );
| 
| 	b->yy_input_file = file;
| 	b->yy_fill_buffer = 1;
| 
| #if YY_ALWAYS_INTERACTIVE
| 	b->yy_is_interactive = 1;
| #else
| #if YY_NEVER_INTERACTIVE
| 	b->yy_is_interactive = 0;
| #else
| 	b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
| #endif
| #endif
| 	}
| 
| 
| #ifdef YY_USE_PROTOS
| void yy_flush_buffer( YY_BUFFER_STATE b )
| #else
| void yy_flush_buffer( b )
| YY_BUFFER_STATE b;
| #endif
| 
| 	{
| 	if ( ! b )
| 		return;
| 
| 	b->yy_n_chars = 0;
| 
| 	/* We always need two end-of-buffer characters.  The first causes
| 	 * a transition to the end-of-buffer state.  The second causes
| 	 * a jam in that state.
| 	 */
| 	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
| 	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;
| 
| 	b->yy_buf_pos = &b->yy_ch_buf[0];
| 
| 	b->yy_at_bol = 1;
| 	b->yy_buffer_status = YY_BUFFER_NEW;
| 
| 	if ( b == yy_current_buffer )
| 		yy_load_buffer_state();
| 	}
| 
| 
| #ifndef YY_NO_SCAN_BUFFER
| #ifdef YY_USE_PROTOS
| YY_BUFFER_STATE yy_scan_buffer( char *base, yy_size_t size )
| #else
| YY_BUFFER_STATE yy_scan_buffer( base, size )
| char *base;
| yy_size_t size;
| #endif
| 	{
| 	YY_BUFFER_STATE b;
| 
| 	if ( size < 2 ||
| 	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
| 	     base[size-1] != YY_END_OF_BUFFER_CHAR )
| 		/* They forgot to leave room for the EOB's. */
| 		return 0;
| 
| 	b = (YY_BUFFER_STATE) yy_flex_alloc( sizeof( struct yy_buffer_state ) );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );
| 
| 	b->yy_buf_size = size - 2;	/* "- 2" to take care of EOB's */
| 	b->yy_buf_pos = b->yy_ch_buf = base;
| 	b->yy_is_our_buffer = 0;
| 	b->yy_input_file = 0;
| 	b->yy_n_chars = b->yy_buf_size;
| 	b->yy_is_interactive = 0;
| 	b->yy_at_bol = 1;
| 	b->yy_fill_buffer = 0;
| 	b->yy_buffer_status = YY_BUFFER_NEW;
| 
| 	yy_switch_to_buffer( b );
| 
| 	return b;
| 	}
| #endif
| 
| 
| #ifndef YY_NO_SCAN_STRING
| #ifdef YY_USE_PROTOS
| YY_BUFFER_STATE yy_scan_string( yyconst char *yy_str )
| #else
| YY_BUFFER_STATE yy_scan_string( yy_str )
| yyconst char *yy_str;
| #endif
| 	{
| 	int len;
| 	for ( len = 0; yy_str[len]; ++len )
| 		;
| 
| 	return yy_scan_bytes( yy_str, len );
| 	}
| #endif
| 
| 
| #ifndef YY_NO_SCAN_BYTES
| #ifdef YY_USE_PROTOS
| YY_BUFFER_STATE yy_scan_bytes( yyconst char *bytes, int len )
| #else
| YY_BUFFER_STATE yy_scan_bytes( bytes, len )
| yyconst char *bytes;
| int len;
| #endif
| 	{
| 	YY_BUFFER_STATE b;
| 	char *buf;
| 	yy_size_t n;
| 	int i;
| 
| 	/* Get memory for full buffer, including space for trailing EOB's. */
| 	n = len + 2;
| 	buf = (char *) yy_flex_alloc( n );
| 	if ( ! buf )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );
| 
| 	for ( i = 0; i < len; ++i )
| 		buf[i] = bytes[i];
| 
| 	buf[len] = buf[len+1] = YY_END_OF_BUFFER_CHAR;
| 
| 	b = yy_scan_buffer( buf, n );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );
| 
| 	/* It's okay to grow etc. this buffer, and we should throw it
| 	 * away when we're done.
| 	 */
| 	b->yy_is_our_buffer = 1;
| 
| 	return b;
| 	}
| #endif
| 
| 
| #ifndef YY_NO_PUSH_STATE
| #ifdef YY_USE_PROTOS
| static void yy_push_state( int new_state )
| #else
| static void yy_push_state( new_state )
| int new_state;
| #endif
| 	{
| 	if ( yy_start_stack_ptr >= yy_start_stack_depth )
| 		{
| 		yy_size_t new_size;
| 
| 		yy_start_stack_depth += YY_START_STACK_INCR;
| 		new_size = yy_start_stack_depth * sizeof( int );
| 
| 		if ( ! yy_start_stack )
| 			yy_start_stack = (int *) yy_flex_alloc( new_size );
| 
| 		else
| 			yy_start_stack = (int *) yy_flex_realloc(
| 					(void *) yy_start_stack, new_size );
| 
| 		if ( ! yy_start_stack )
| 			YY_FATAL_ERROR(
| 			"out of memory expanding start-condition stack" );
| 		}
| 
| 	yy_start_stack[yy_start_stack_ptr++] = YY_START;
| 
| 	BEGIN(new_state);
| 	}
| #endif
| 
| 
| #ifndef YY_NO_POP_STATE
| static void yy_pop_state()
| 	{
| 	if ( --yy_start_stack_ptr < 0 )
| 		YY_FATAL_ERROR( "start-condition stack underflow" );
| 
| 	BEGIN(yy_start_stack[yy_start_stack_ptr]);
| 	}
| #endif
| 
| 
| #ifndef YY_NO_TOP_STATE
| static int yy_top_state()
| 	{
| 	return yy_start_stack[yy_start_stack_ptr - 1];
| 	}
| #endif
| 
| #ifndef YY_EXIT_FAILURE
| #define YY_EXIT_FAILURE 2
| #endif
| 
| #ifdef YY_USE_PROTOS
| static void yy_fatal_error( yyconst char msg[] )
| #else
| static void yy_fatal_error( msg )
| char msg[];
| #endif
| 	{
| 	(void) fprintf( stderr, "%s\n", msg );
| 	exit( YY_EXIT_FAILURE );
| 	}
| 
| 
| 
| /* Redefine yyless() so it works in section 3 code. */
| 
| #undef yyless
| #define yyless(n) \
| 	do \
| 		{ \
| 		/* Undo effects of setting up yytext. */ \
| 		yytext[yyleng] = yy_hold_char; \
| 		yy_c_buf_p = yytext + n; \
| 		yy_hold_char = *yy_c_buf_p; \
| 		*yy_c_buf_p = '\0'; \
| 		yyleng = n; \
| 		} \
| 	while ( 0 )
| 
| 
| /* Internal utility routines. */
| 
| #ifndef yytext_ptr
| #ifdef YY_USE_PROTOS
| static void yy_flex_strncpy( char *s1, yyconst char *s2, int n )
| #else
| static void yy_flex_strncpy( s1, s2, n )
| char *s1;
| yyconst char *s2;
| int n;
| #endif
| 	{
| 	register int i;
| 	for ( i = 0; i < n; ++i )
| 		s1[i] = s2[i];
| 	}
| #endif
| 
| #ifdef YY_NEED_STRLEN
| #ifdef YY_USE_PROTOS
| static int yy_flex_strlen( yyconst char *s )
| #else
| static int yy_flex_strlen( s )
| yyconst char *s;
| #endif
| 	{
| 	register int n;
| 	for ( n = 0; s[n]; ++n )
| 		;
| 
| 	return n;
| 	}
| #endif
| 
| 
| #ifdef YY_USE_PROTOS
| static void *yy_flex_alloc( yy_size_t size )
| #else
| static void *yy_flex_alloc( size )
| yy_size_t size;
| #endif
| 	{
| 	return (void *) malloc( size );
| 	}
| 
| #ifdef YY_USE_PROTOS
| static void *yy_flex_realloc( void *ptr, yy_size_t size )
| #else
| static void *yy_flex_realloc( ptr, size )
| void *ptr;
| yy_size_t size;
| #endif
| 	{
| 	/* The cast to (char *) in the following accommodates both
| 	 * implementations that use char* generic pointers, and those
| 	 * that use void* generic pointers.  It works with the latter
| 	 * because both ANSI C and C++ allow castless assignment from
| 	 * any pointer type to void*, and deal with argument conversions
| 	 * as though doing an assignment.
| 	 */
| 	return (void *) realloc( (char *) ptr, size );
| 	}
| 
| #ifdef YY_USE_PROTOS
| static void yy_flex_free( void *ptr )
| #else
| static void yy_flex_free( ptr )
| void *ptr;
| #endif
| 	{
| 	free( ptr );
| 	}
| 
| #if YY_MAIN
| int main()
| 	{
| 	yylex();
| 	return 0;
| 	}
| #endif
| #line 9 "conftest.l"
| 
| #ifdef YYTEXT_POINTER
| extern char *yytext;
| #endif
| int
| main (void)
| {
|   return ! yylex () + ! yywrap ();
| }
configure:3690: gcc -o conftest.exe -g -O2 -I/mingw/include/SDL  conftest.c -lfl -lpthread  -l ws2_32 >&5
conftest.l: In function 'yylex':
conftest.l:6:3: warning: comparison between pointer and integer
conftest.l:6:3: warning: assignment makes pointer from integer without a cast
configure:3696: $? = 0
configure:3717: result: -lfl
configure:3723: checking whether yytext is a pointer
configure:3744: gcc -o conftest.exe -g -O2 -I/mingw/include/SDL  conftest.c -lfl -lpthread  -l ws2_32 >&5
conftest.l: In function 'yylex':
conftest.l:6:3: warning: comparison between pointer and integer
conftest.l:6:3: warning: assignment makes pointer from integer without a cast
configure:3750: $? = 0
configure:3769: result: yes
configure:3788: checking for bison
configure:3804: found /bin/bison
configure:3815: result: bison -y
configure:3828: checking for inline
configure:3854: gcc -c -g -O2 -I/mingw/include/SDL conftest.c >&5
configure:3860: $? = 0
configure:3878: result: inline
configure:3906: checking for ISO C99 varargs macros
configure:3933: gcc -c -g -O2 -I/mingw/include/SDL conftest.c >&5
configure:3939: $? = 0
configure:3953: result: yes
configure:3956: checking for GNU C varargs macros
configure:3983: gcc -c -g -O2 -I/mingw/include/SDL conftest.c >&5
configure:3989: $? = 0
configure:4003: result: yes
configure:4086: checking for sdl-config
configure:4104: found /mingw/bin/sdl-config
configure:4117: result: /mingw/bin/sdl-config
configure:4126: checking for SDL - version >= 1.2.6
configure:4221: gcc -o conftest.exe -g -O2 -I/usr/local/include/SDL -D_GNU_SOURCE=1 -Dmain=SDL_main -I/mingw/include/SDL  conftest.c -lpthread  -l ws2_32 -L/usr/local/lib -lmingw32 -lSDLmain -lSDL -mwindows >&5
configure:4224: $? = 0
configure:4230: ./conftest.exe
configure:4233: $? = 0
configure:4253: result: yes
configure:4349: checking for SDL_image.h
configure:4365: gcc -c -g -O2 -I/usr/local/include/SDL -D_GNU_SOURCE=1 -Dmain=SDL_main -I/mingw/include/SDL conftest.c >&5
configure:4371: $? = 0
configure:4376: result: yes
configure:4394: checking for SDL_opengl.h
configure:4410: gcc -c -g -O2 -I/usr/local/include/SDL -D_GNU_SOURCE=1 -Dmain=SDL_main -I/mingw/include/SDL conftest.c >&5
configure:4416: $? = 0
configure:4421: result: yes
configure:4437: checking for sqrt in -lm
configure:4472: gcc -o conftest.exe -g -O2 -I/mingw/include/SDL  conftest.c -lm  -lpthread  -l ws2_32 >&5
conftest.c:20:6: warning: conflicting types for built-in function 'sqrt'
configure:4478: $? = 0
configure:4496: result: yes
configure:4505: checking for compress in -lz
configure:4540: gcc -o conftest.exe -g -O2 -I/mingw/include/SDL  conftest.c -lz  -lpthread  -l ws2_32 >&5
c:/mingw/bin/../lib/gcc/mingw32/4.5.0/../../../../mingw32/bin/ld.exe: cannot find -lz
collect2: ld returned 1 exit status
configure:4546: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "dreamchess"
| #define PACKAGE_TARNAME "dreamchess"
| #define PACKAGE_VERSION "0.2.0"
| #define PACKAGE_STRING "dreamchess 0.2.0"
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE "dreamchess"
| #define VERSION "0.2.0"
| #define YYTEXT_POINTER 1
| #define HAVE_C99_VARARGS_MACROS 1
| #define HAVE_GNUC_VARARGS_MACROS 1
| /* end confdefs.h.  */
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char compress ();
| int
| main ()
| {
| return compress ();
|   ;
|   return 0;
| }
configure:4564: result: no
configure:4574: checking for png_create_read_struct in -lpng
configure:4610: gcc -o conftest.exe -g -O2 -I/mingw/include/SDL  conftest.c -lpng  -lm
	 -lpthread  -l ws2_32 >&5
c:/mingw/bin/../lib/gcc/mingw32/4.5.0/../../../../mingw32/bin/ld.exe: cannot find -lpng
collect2: ld returned 1 exit status
configure:4616: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "dreamchess"
| #define PACKAGE_TARNAME "dreamchess"
| #define PACKAGE_VERSION "0.2.0"
| #define PACKAGE_STRING "dreamchess 0.2.0"
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE "dreamchess"
| #define VERSION "0.2.0"
| #define YYTEXT_POINTER 1
| #define HAVE_C99_VARARGS_MACROS 1
| #define HAVE_GNUC_VARARGS_MACROS 1
| /* end confdefs.h.  */
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char png_create_read_struct ();
| int
| main ()
| {
| return png_create_read_struct ();
|   ;
|   return 0;
| }
configure:4634: result: no
configure:4780: checking for jpeg_CreateCompress in -ljpeg
configure:4816: gcc -o conftest.exe -g -O2 -I/mingw/include/SDL  conftest.c -ljpeg
	 -lpthread  -l ws2_32 >&5
c:/mingw/bin/../lib/gcc/mingw32/4.5.0/../../../../mingw32/bin/ld.exe: cannot find -ljpeg
collect2: ld returned 1 exit status
configure:4822: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "dreamchess"
| #define PACKAGE_TARNAME "dreamchess"
| #define PACKAGE_VERSION "0.2.0"
| #define PACKAGE_STRING "dreamchess 0.2.0"
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE "dreamchess"
| #define VERSION "0.2.0"
| #define YYTEXT_POINTER 1
| #define HAVE_C99_VARARGS_MACROS 1
| #define HAVE_GNUC_VARARGS_MACROS 1
| /* end confdefs.h.  */
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char jpeg_CreateCompress ();
| int
| main ()
| {
| return jpeg_CreateCompress ();
|   ;
|   return 0;
| }
configure:4840: result: no
configure:4849: checking for IMG_LoadPNG_RW in -lSDL_image
configure:4885: gcc -o conftest.exe -g -O2 -I/mingw/include/SDL  conftest.c -lSDL_image   -L/usr/local/lib -lmingw32 -lSDLmain -lSDL -mwindows
	 -lpthread  -l ws2_32 >&5
configure:4891: $? = 0
configure:4909: result: yes
configure:5058: checking for main in -lshlwapi
configure:5087: gcc -o conftest.exe -g -O2 -I/mingw/include/SDL  conftest.c -lshlwapi  -lpthread  -l ws2_32 >&5
configure:5093: $? = 0
configure:5111: result: yes
configure:5126: checking for main in -lopengl32
configure:5155: gcc -o conftest.exe -g -O2 -I/mingw/include/SDL  conftest.c -lopengl32  -lshlwapi -lpthread  -l ws2_32 >&5
configure:5161: $? = 0
configure:5179: result: yes
configure:5182: checking for main in -lglu32
configure:5211: gcc -o conftest.exe -g -O2 -I/mingw/include/SDL  conftest.c -lglu32  -lshlwapi -lpthread  -l ws2_32 >&5
configure:5217: $? = 0
configure:5235: result: yes
configure:5545: checking for SDL_mixer.h
configure:5561: gcc -c -g -O2 -I/usr/local/include/SDL -D_GNU_SOURCE=1 -Dmain=SDL_main -I/mingw/include/SDL conftest.c >&5
conftest.c:14:23: fatal error: SDL_mixer.h: No such file or directory
compilation terminated.
configure:5567: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "dreamchess"
| #define PACKAGE_TARNAME "dreamchess"
| #define PACKAGE_VERSION "0.2.0"
| #define PACKAGE_STRING "dreamchess 0.2.0"
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE "dreamchess"
| #define VERSION "0.2.0"
| #define YYTEXT_POINTER 1
| #define HAVE_C99_VARARGS_MACROS 1
| #define HAVE_GNUC_VARARGS_MACROS 1
| #define HAVE_LIBSHLWAPI 1
| /* end confdefs.h.  */
| #include "SDL_mixer.h"
configure:5578: result: no
configure:5588: checking for Mix_OpenAudio in -lSDL_mixer
configure:5624: gcc -o conftest.exe -g -O2 -I/mingw/include/SDL  conftest.c -lSDL_mixer -L/usr/local/lib -lmingw32 -lSDLmain -lSDL -mwindows
	 -lshlwapi -lpthread  -l ws2_32 >&5
c:/mingw/bin/../lib/gcc/mingw32/4.5.0/../../../../mingw32/bin/ld.exe: cannot find -lSDL_mixer
collect2: ld returned 1 exit status
configure:5630: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "dreamchess"
| #define PACKAGE_TARNAME "dreamchess"
| #define PACKAGE_VERSION "0.2.0"
| #define PACKAGE_STRING "dreamchess 0.2.0"
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE "dreamchess"
| #define VERSION "0.2.0"
| #define YYTEXT_POINTER 1
| #define HAVE_C99_VARARGS_MACROS 1
| #define HAVE_GNUC_VARARGS_MACROS 1
| #define HAVE_LIBSHLWAPI 1
| /* end confdefs.h.  */
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char Mix_OpenAudio ();
| int
| main ()
| {
| return Mix_OpenAudio ();
|   ;
|   return 0;
| }
configure:5648: result: no
configure:5781: checking for windres
configure:5797: found /mingw/bin/windres
configure:5808: result: windres
configure:6077: checking how to run the C preprocessor
configure:6117: gcc -E -I/mingw/include/SDL conftest.c
configure:6123: $? = 0
configure:6154: gcc -E -I/mingw/include/SDL conftest.c
conftest.c:16:28: fatal error: ac_nonexistent.h: No such file or directory
compilation terminated.
configure:6160: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "dreamchess"
| #define PACKAGE_TARNAME "dreamchess"
| #define PACKAGE_VERSION "0.2.0"
| #define PACKAGE_STRING "dreamchess 0.2.0"
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE "dreamchess"
| #define VERSION "0.2.0"
| #define YYTEXT_POINTER 1
| #define HAVE_C99_VARARGS_MACROS 1
| #define HAVE_GNUC_VARARGS_MACROS 1
| #define HAVE_LIBSHLWAPI 1
| #define WITH_UI_SDLGL 1
| #define COMM_PIPE_WIN32 1
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:6193: result: gcc -E
configure:6222: gcc -E -I/mingw/include/SDL conftest.c
configure:6228: $? = 0
configure:6259: gcc -E -I/mingw/include/SDL conftest.c
conftest.c:16:28: fatal error: ac_nonexistent.h: No such file or directory
compilation terminated.
configure:6265: $? = 1
configure: failed program was:
| /* confdefs.h.  */
| #define PACKAGE_NAME "dreamchess"
| #define PACKAGE_TARNAME "dreamchess"
| #define PACKAGE_VERSION "0.2.0"
| #define PACKAGE_STRING "dreamchess 0.2.0"
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE "dreamchess"
| #define VERSION "0.2.0"
| #define YYTEXT_POINTER 1
| #define HAVE_C99_VARARGS_MACROS 1
| #define HAVE_GNUC_VARARGS_MACROS 1
| #define HAVE_LIBSHLWAPI 1
| #define WITH_UI_SDLGL 1
| #define COMM_PIPE_WIN32 1
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:6303: checking for grep that handles long lines and -e
configure:6377: result: /bin/grep
configure:6382: checking for egrep
configure:6460: result: /bin/grep -E
configure:6465: checking for ANSI C header files
configure:6495: gcc -c -g -O2 -I/mingw/include/SDL conftest.c >&5
configure:6501: $? = 0
configure:6600: gcc -o conftest.exe -g -O2 -I/mingw/include/SDL  conftest.c -lshlwapi -lpthread  -l ws2_32 >&5
configure:6603: $? = 0
configure:6609: ./conftest.exe
configure:6612: $? = 0
configure:6629: result: yes
configure:6653: checking for sys/types.h
configure:6674: gcc -c -g -O2 -I/mingw/include/SDL conftest.c >&5
configure:6680: $? = 0
configure:6696: result: yes
configure:6653: checking for sys/stat.h
configure:6674: gcc -c -g -O2 -I/mingw/include/SDL conftest.c >&5
configure:6680: $? = 0
configure:6696: result: yes
configure:6653: checking for stdlib.h
configure:6674: gcc -c -g -O2 -I/mingw/include/SDL conftest.c >&5
configure:6680: $? = 0
configure:6696: result: yes
configure:6653: checking for string.h
configure:6674: gcc -c -g -O2 -I/mingw/include/SDL conftest.c >&5
configure:6680: $? = 0
configure:6696: result: yes
configure:6653: checking for memory.h
configure:6674: gcc -c -g -O2 -I/mingw/include/SDL conftest.c >&5
configure:6680: $? = 0
configure:6696: result: yes
configure:6653: checking for strings.h
configure:6674: gcc -c -g -O2 -I/mingw/include/SDL conftest.c >&5
configure:6680: $? = 0
configure:6696: result: yes
configure:6653: checking for inttypes.h
configure:6674: gcc -c -g -O2 -I/mingw/include/SDL conftest.c >&5
configure:6680: $? = 0
configure:6696: result: yes
configure:6653: checking for stdint.h
configure:6674: gcc -c -g -O2 -I/mingw/include/SDL conftest.c >&5
configure:6680: $? = 0
configure:6696: result: yes
configure:6653: checking for unistd.h
configure:6674: gcc -c -g -O2 -I/mingw/include/SDL conftest.c >&5
configure:6680: $? = 0
configure:6696: result: yes
configure:6718: checking mxml.h usability
configure:6735: gcc -c -g -O2 -I/mingw/include/SDL conftest.c >&5
configure:6741: $? = 0
configure:6755: result: yes
configure:6759: checking mxml.h presence
configure:6774: gcc -E -I/mingw/include/SDL conftest.c
configure:6780: $? = 0
configure:6794: result: yes
configure:6822: checking for mxml.h
configure:6829: result: yes
configure:6843: checking for mxmlLoadFile in -lmxml
configure:6878: gcc -o conftest.exe -g -O2 -I/mingw/include/SDL  conftest.c -lmxml  -lshlwapi -lpthread  -l ws2_32 >&5
configure:6884: $? = 0
configure:6902: result: yes
configure:6936: checking for ANSI C header files
configure:7100: result: yes
configure:7117: checking for stdlib.h
configure:7123: result: yes
configure:7117: checking for string.h
configure:7123: result: yes
configure:7127: checking getopt.h usability
configure:7144: gcc -c -g -O2 -I/mingw/include/SDL conftest.c >&5
configure:7150: $? = 0
configure:7164: result: yes
configure:7168: checking getopt.h presence
configure:7183: gcc -E -I/mingw/include/SDL conftest.c
configure:7189: $? = 0
configure:7203: result: yes
configure:7231: checking for getopt.h
configure:7239: result: yes
configure:7259: checking for getopt_long
configure:7315: gcc -o conftest.exe -g -O2 -I/mingw/include/SDL  conftest.c -lmxml -lshlwapi -lpthread  -l ws2_32 >&5
configure:7321: $? = 0
configure:7339: result: yes
configure:7259: checking for strdup
configure:7315: gcc -o conftest.exe -g -O2 -I/mingw/include/SDL  conftest.c -lmxml -lshlwapi -lpthread  -l ws2_32 >&5
conftest.c:55:6: warning: conflicting types for built-in function 'strdup'
configure:7321: $? = 0
configure:7339: result: yes
configure:7259: checking for vsnprintf
configure:7315: gcc -o conftest.exe -g -O2 -I/mingw/include/SDL  conftest.c -lmxml -lshlwapi -lpthread  -l ws2_32 >&5
conftest.c:56:6: warning: conflicting types for built-in function 'vsnprintf'
configure:7321: $? = 0
configure:7339: result: yes
configure:7259: checking for usleep
configure:7315: gcc -o conftest.exe -g -O2 -I/mingw/include/SDL  conftest.c -lmxml -lshlwapi -lpthread  -l ws2_32 >&5
configure:7321: $? = 0
configure:7339: result: yes
configure:7351: checking for an ANSI C-conforming const
configure:7426: gcc -c -g -O2 -I/mingw/include/SDL conftest.c >&5
configure:7432: $? = 0
configure:7447: result: yes
configure:7457: checking for working volatile
configure:7486: gcc -c -g -O2 -I/mingw/include/SDL conftest.c >&5
configure:7492: $? = 0
configure:7507: result: yes
configure:7650: creating ./config.status

## ---------------------- ##
## Running config.status. ##
## ---------------------- ##

This file was extended by dreamchess config.status 0.2.0, which was
generated by GNU Autoconf 2.61.  Invocation command line was

  CONFIG_FILES    = 
  CONFIG_HEADERS  = 
  CONFIG_LINKS    = 
  CONFIG_COMMANDS = 
  $ ./config.status 

on WIN-KRVTGVPPFG5

config.status:696: creating Makefile
config.status:696: creating desktop/Makefile
config.status:696: creating doc/Makefile
config.status:696: creating DreamChess.xcodeproj/Makefile
config.status:696: creating English.lproj/Makefile
config.status:696: creating man/Makefile
config.status:696: creating m4/Makefile
config.status:696: creating pkg/Makefile
config.status:696: creating pkg/win32/Makefile
config.status:696: creating src/Makefile
config.status:696: creating src/audio/Makefile
config.status:696: creating src/libs/Makefile
config.status:696: creating src/libs/gamegui/Makefile
config.status:696: creating src/libs/minizip/Makefile
config.status:696: creating src/include/Makefile
config.status:696: creating src/include/gamegui/Makefile
config.status:696: creating src/include/minizip/Makefile
config.status:696: creating src/ui_sdlgl/Makefile
config.status:696: creating src/dreamer/Makefile
config.status:696: creating src/macosx/Makefile
config.status:696: creating src/gamegui_dialogs/Makefile
config.status:696: creating config.h
config.status:937: config.h is unchanged
config.status:983: executing depfiles commands

## ---------------- ##
## Cache variables. ##
## ---------------- ##

ac_cv_build=i686-pc-mingw32
ac_cv_c_compiler_gnu=yes
ac_cv_c_const=yes
ac_cv_c_inline=inline
ac_cv_c_volatile=yes
ac_cv_env_CC_set=
ac_cv_env_CC_value=
ac_cv_env_CFLAGS_set=
ac_cv_env_CFLAGS_value=
ac_cv_env_CPPFLAGS_set=set
ac_cv_env_CPPFLAGS_value=-I/mingw/include/SDL
ac_cv_env_CPP_set=
ac_cv_env_CPP_value=
ac_cv_env_LDFLAGS_set=
ac_cv_env_LDFLAGS_value=
ac_cv_env_LIBS_set=set
ac_cv_env_LIBS_value='-lpthread  -l ws2_32'
ac_cv_env_build_alias_set=
ac_cv_env_build_alias_value=
ac_cv_env_host_alias_set=
ac_cv_env_host_alias_value=
ac_cv_env_target_alias_set=
ac_cv_env_target_alias_value=
ac_cv_exeext=.exe
ac_cv_func_getopt_long=yes
ac_cv_func_strdup=yes
ac_cv_func_usleep=yes
ac_cv_func_vsnprintf=yes
ac_cv_header_getopt_h=yes
ac_cv_header_inttypes_h=yes
ac_cv_header_memory_h=yes
ac_cv_header_mxml_h=yes
ac_cv_header_stdc=yes
ac_cv_header_stdint_h=yes
ac_cv_header_stdlib_h=yes
ac_cv_header_string_h=yes
ac_cv_header_strings_h=yes
ac_cv_header_sys_stat_h=yes
ac_cv_header_sys_types_h=yes
ac_cv_header_unistd_h=yes
ac_cv_host=i686-pc-mingw32
ac_cv_lib_SDL_image_IMG_LoadPNG_RW=yes
ac_cv_lib_SDL_mixer_Mix_OpenAudio=no
ac_cv_lib_glu32_main=yes
ac_cv_lib_jpeg_jpeg_CreateCompress=no
ac_cv_lib_lex=-lfl
ac_cv_lib_m_sqrt=yes
ac_cv_lib_mxml_mxmlLoadFile=yes
ac_cv_lib_opengl32_main=yes
ac_cv_lib_png_png_create_read_struct=no
ac_cv_lib_shlwapi_main=yes
ac_cv_lib_z_compress=no
ac_cv_objext=o
ac_cv_path_EGREP='/bin/grep -E'
ac_cv_path_GREP=/bin/grep
ac_cv_path_SDL_CONFIG=/mingw/bin/sdl-config
ac_cv_path_install='/bin/install -c'
ac_cv_path_mkdir=/bin/mkdir
ac_cv_prog_AWK=gawk
ac_cv_prog_CPP='gcc -E'
ac_cv_prog_LEX=flex
ac_cv_prog_YACC='bison -y'
ac_cv_prog_ac_ct_CC=gcc
ac_cv_prog_ac_ct_RANLIB=ranlib
ac_cv_prog_ac_ct_WINDRES=windres
ac_cv_prog_cc_c89=
ac_cv_prog_cc_g=yes
ac_cv_prog_lex_root=lex.yy
ac_cv_prog_lex_yytext_pointer=yes
ac_cv_prog_make_make_set=yes
ac_cv_target=i686-pc-mingw32
am_cv_CC_dependencies_compiler_type=gcc3

## ----------------- ##
## Output variables. ##
## ----------------- ##

ACLOCAL='${SHELL} /c/Projekt/dreamchess-0.2.0/missing --run aclocal-1.10'
AMDEPBACKSLASH='\'
AMDEP_FALSE='#'
AMDEP_TRUE=''
AMTAR='${SHELL} /c/Projekt/dreamchess-0.2.0/missing --run tar'
AUTOCONF='${SHELL} /c/Projekt/dreamchess-0.2.0/missing --run autoconf'
AUTOHEADER='${SHELL} /c/Projekt/dreamchess-0.2.0/missing --run autoheader'
AUTOMAKE='${SHELL} /c/Projekt/dreamchess-0.2.0/missing --run automake-1.10'
AWK='gawk'
BEOS_RC_FALSE=''
BEOS_RC_TRUE='#'
CC='gcc'
CCDEPMODE='depmode=gcc3'
CC_FOR_BUILD='gcc'
CFLAGS='-g -O2'
CPP='gcc -E'
CPPFLAGS='-I/mingw/include/SDL'
CYGPATH_W='echo'
DATADIR=''
DEFS='-DHAVE_CONFIG_H'
DEPDIR='.deps'
DREAMCHESS_LIBS='libs/libpipe_win32.a'
DREAMER='dreamer$(EXEEXT)'
DREAMER_LIBS='../libs/libpipe_win32.a'
DREAMER_SDL_CFLAGS=''
ECHO_C=''
ECHO_N='-n'
ECHO_T=''
EGREP='/bin/grep -E'
EXEEXT='.exe'
GREP='/bin/grep'
INSTALL_DATA='${INSTALL} -m 644'
INSTALL_PROGRAM='${INSTALL}'
INSTALL_SCRIPT='${INSTALL}'
INSTALL_STRIP_PROGRAM='$(install_sh) -c -s'
LDFLAGS=''
LEX='flex'
LEXLIB='-lfl'
LEX_OUTPUT_ROOT='lex.yy'
LIBOBJS=''
LIBS='-lmxml -lshlwapi -lpthread  -l ws2_32'
LTLIBOBJS=''
MAKEINFO='${SHELL} /c/Projekt/dreamchess-0.2.0/missing --run makeinfo'
MINIZIP_CFLAGS=''
MINIZIP_LIB=''
OBJEXT='o'
PACKAGE='dreamchess'
PACKAGE_BUGREPORT=''
PACKAGE_NAME='dreamchess'
PACKAGE_STRING='dreamchess 0.2.0'
PACKAGE_TARNAME='dreamchess'
PACKAGE_VERSION='0.2.0'
PATH_SEPARATOR=':'
PIPE_LIB='libpipe_win32.a'
RANLIB='ranlib'
RC=''
SDL_CFLAGS='-I/usr/local/include/SDL -D_GNU_SOURCE=1 -Dmain=SDL_main'
SDL_CONFIG='/mingw/bin/sdl-config'
SDL_LIBS='-lSDL_image  -L/usr/local/lib -lmingw32 -lSDLmain -lSDL -mwindows -lopengl32 -lglu32'
SET_MAKE=''
SHELL='/bin/sh'
STRIP=''
UI_LIBS='ui_sdlgl/libui_sdlgl.a gamegui_dialogs/libgamegui_dialogs.a'
UI_SDLGL_FALSE='#'
UI_SDLGL_TRUE=''
VERSION='0.2.0'
WIN32_RC='win32_rc.$(OBJEXT)'
WINDRES='windres'
XRES=''
YACC='bison -y'
ac_ct_CC='gcc'
am__fastdepCC_FALSE='#'
am__fastdepCC_TRUE=''
am__include='include'
am__isrc=''
am__leading_dot='.'
am__quote=''
am__tar='${AMTAR} chof - "$$tardir"'
am__untar='${AMTAR} xf -'
bindir='${exec_prefix}/bin'
build='i686-pc-mingw32'
build_alias=''
build_cpu='i686'
build_os='mingw32'
build_vendor='pc'
datadir='${datarootdir}'
datarootdir='${prefix}/share'
docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'
dvidir='${docdir}'
exec_prefix='${prefix}'
host='i686-pc-mingw32'
host_alias=''
host_cpu='i686'
host_os='mingw32'
host_vendor='pc'
htmldir='${docdir}'
includedir='${prefix}/include'
infodir='${datarootdir}/info'
install_sh='$(SHELL) /c/Projekt/dreamchess-0.2.0/install-sh'
libdir='${exec_prefix}/lib'
libexecdir='${exec_prefix}/libexec'
localedir='${datarootdir}/locale'
localstatedir='${prefix}/var'
mandir='${datarootdir}/man'
mkdir_p='/bin/mkdir -p'
oldincludedir='/usr/include'
pdfdir='${docdir}'
prefix='/mingw'
program_transform_name='s,x,x,'
psdir='${docdir}'
sbindir='${exec_prefix}/sbin'
sharedstatedir='${prefix}/com'
sysconfdir='${prefix}/etc'
target='i686-pc-mingw32'
target_alias=''
target_cpu='i686'
target_os='mingw32'
target_vendor='pc'

## ----------- ##
## confdefs.h. ##
## ----------- ##

#define PACKAGE_NAME "dreamchess"
#define PACKAGE_TARNAME "dreamchess"
#define PACKAGE_VERSION "0.2.0"
#define PACKAGE_STRING "dreamchess 0.2.0"
#define PACKAGE_BUGREPORT ""
#define PACKAGE "dreamchess"
#define VERSION "0.2.0"
#define YYTEXT_POINTER 1
#define HAVE_C99_VARARGS_MACROS 1
#define HAVE_GNUC_VARARGS_MACROS 1
#define HAVE_LIBSHLWAPI 1
#define WITH_UI_SDLGL 1
#define COMM_PIPE_WIN32 1
#define STDC_HEADERS 1
#define HAVE_SYS_TYPES_H 1
#define HAVE_SYS_STAT_H 1
#define HAVE_STDLIB_H 1
#define HAVE_STRING_H 1
#define HAVE_MEMORY_H 1
#define HAVE_STRINGS_H 1
#define HAVE_INTTYPES_H 1
#define HAVE_STDINT_H 1
#define HAVE_UNISTD_H 1
#define HAVE_LIBMXML 1
#define STDC_HEADERS 1
#define HAVE_STDLIB_H 1
#define HAVE_STRING_H 1
#define HAVE_GETOPT_H 1
#define HAVE_GETOPT_LONG 1
#define HAVE_STRDUP 1
#define HAVE_VSNPRINTF 1
#define HAVE_USLEEP 1

configure: exit 0
